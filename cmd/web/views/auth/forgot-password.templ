package auth

import "go-htmx-sqlite/cmd/web/components/ui/card"
import "go-htmx-sqlite/cmd/web/components/ui/form"
import "go-htmx-sqlite/cmd/web/components/ui/input"
import "go-htmx-sqlite/cmd/web/components/ui/button"
import "go-htmx-sqlite/cmd/web/layouts"
import "go-htmx-sqlite/internal/types"

templ ForgotPasswordView(data types.TemplateData,forgotPassForm types.ForgotPasswordForm) {
	@layouts.AuthLayout(data) {
		<div class="w-full max-w-sm">
			@card.Card() {
				@card.Header() {
					@card.Title() {
						Forgot Password?
					}
					@card.Description() {
						Enter your email to recieve your reset link
					}
				}
				@card.Content() {
					@ForgotPasswordForm(data,forgotPassForm)
				}
				@card.Footer(card.FooterProps{
					Class: "flex flex-col gap-8",
				}) {
					<p class="text-sm">
						Don't have an account? 
						<a href="/sign-up" class="text-blue-500 hover:underline">Sign up</a>
					</p>
				}
			}
		</div>
	}
}

templ ForgotPasswordForm(data types.TemplateData,forgotPassform types.ForgotPasswordForm) {
	<form
		method="post"
		action="/forgot-password"
		hx-post="/forgot-password"
		hx-target="this"
		hx-swap="innerHTML"
		hx-indicator="#forgot-spinner"
	>
		@CSRFInput(data.CSRFToken)
		<div class="flex flex-col gap-4">
			<div class="w-full max-w-sm grid gap-2">
				@form.Item() {
					@form.Label(form.LabelProps{
						For: "email",
					}) {
						Email
					}
					@input.Input(input.Props{
						Name:        "email",
						ID:          "email",
						Type:        input.TypeEmail,
						Placeholder: "m@example.com",
						HasError:    forgotPassform.FieldErrors["email"] != "",
					})
					@form.Message(form.MessageProps{
						Variant: form.MessageVariantError,
					}) {
						{ forgotPassform.FieldErrors["email"] }
					}

				}
				@button.Button(button.Props{
					Type:  button.TypeSubmit,
					Class: "w-full flex items-center justify-center gap-2",
				}) {
					<span id="forgot-spinner" class="htmx-indicator">
						<svg class="animate-spin h-4 w-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
							<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
							<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
						</svg>
					</span>
					Send
				}
			</div>
		</div>
	</form>
}
