package auth

import "go-htmx-sqlite/cmd/web/components/ui/card"
import "go-htmx-sqlite/cmd/web/components/ui/form"
import "go-htmx-sqlite/cmd/web/components/ui/input"
import "go-htmx-sqlite/cmd/web/components/ui/button"
import "go-htmx-sqlite/cmd/web/layouts"
import "go-htmx-sqlite/internal/types"
import "go-htmx-sqlite/cmd/web/components/ui/icon"
import "go-htmx-sqlite/cmd/web/components/ui/separator"

templ LoginView(data types.TemplateData) {
	@layouts.AuthLayout(data) {
		<div class="w-full max-w-sm">
			@card.Card() {
				@card.Header(card.HeaderProps{
					Class: "text-center",
				}) {
					@card.Title(card.TitleProps{
						Class: "text-xl font-bold tracking-wider",
					}) {
						Login
					}
					@card.Description() {
						Login to start using the application
					}
				}
				<form method="post" action="/login">
					@CSRFInput(data.CSRFToken)
					@card.Content() {
						<div class="flex flex-col gap-4">
							@button.Button(button.Props{
								Class:   "flex gap-2 items-center",
								Variant: button.VariantSecondary,
							}) {
								@icon.Mail()
								Login with Google
							}
							@separator.Separator(separator.Props{
								Class: "w-full",
							}) {
								Or continue with
							}
							<div class="w-full max-w-sm grid gap-2">
								@form.Item() {
									@form.Label(form.LabelProps{
										For: "email-form",
									}) {
										Email
									}
									@input.Input(input.Props{
										Name:        "email",
										ID:          "email-form",
										Type:        input.TypeEmail,
										Placeholder: "m@example.com",
										HasError:    false,
									})
								}
								@form.Item() {
									@form.Label(form.LabelProps{
										For: "password",
									}) {
										Password
									}
									@input.Input(input.Props{
										Name:     "password",
										ID:       "password",
										Type:     input.TypePassword,
										HasError: false,
									})
								}
								<p class="text-sm">
									<a href="/forgot-password" class="align-right hover:underline">Forgot your password?</a>
								</p>
							</div>
						</div>
					}
					@card.Footer(card.FooterProps{
						Class: "flex flex-col gap-8",
					}) {
						@button.Button(button.Props{
							Type:  button.TypeSubmit,
							Class: "w-full",
						}) {
							Login 
						}
						<p class="text-sm">
							Don't have an account? 
							<a href="/sign-up" class="text-blue-500 hover:underline">Sign up</a>
						</p>
					}
				</form>
			}
		</div>
	}
}
