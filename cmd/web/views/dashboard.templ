package views

import (
	"go-htmx-sqlite/cmd/web/components"
	"go-htmx-sqlite/cmd/web/components/ui/alert"
	"go-htmx-sqlite/cmd/web/components/ui/button"
	"go-htmx-sqlite/cmd/web/components/ui/icon"
	"go-htmx-sqlite/cmd/web/components/ui/input"
	"go-htmx-sqlite/cmd/web/layouts"
	"go-htmx-sqlite/cmd/web/utils"
	"go-htmx-sqlite/internal/types"
)

templ PlaceholderPattern() {
	{{ patternId := "pattern-" + utils.RandomID() }}
	<svg class="absolute inset-0 size-full stroke-neutral-900/20 dark:stroke-neutral-100/20" fill="none">
		<defs>
			<pattern id={ patternId } x="0" y="0" width="8" height="8" patternUnits="userSpaceOnUse">
				<path d="M-1 5L5 -1M3 9L8.5 3.5" stroke-width="0.5"></path>
			</pattern>
		</defs>
		<rect stroke="none" fill={ "url(#" + patternId + ")" } width="100%" height="100%"></rect>
	</svg>
}

templ DashboardView(data types.TemplateData) {
	@layouts.DashboardLayout(data) {
		<div class="grid auto-rows-min gap-4 md:grid-cols-3">
			<div class="relative aspect-video overflow-hidden rounded-xl border border-sidebar-border/70 dark:border-sidebar-border">
				@PlaceholderPattern()
			</div>
			<div class="relative aspect-video overflow-hidden rounded-xl border border-sidebar-border/70 dark:border-sidebar-border">
				@PlaceholderPattern()
			</div>
			<div class="relative aspect-video overflow-hidden rounded-xl border border-sidebar-border/70 dark:border-sidebar-border">
				@PlaceholderPattern()
			</div>
		</div>
		<div class="py-4">
			<form hx-post="/hello" hx-swap="beforeend" method="POST" hx-target="#hello-container" class="flex items-center gap-4">
				@components.CSRFInput(data.CSRFToken)
				@input.Input(input.Props{
					Type:        input.TypeText,
					Placeholder: "write something...",
					Name:        "name",
				})
				@button.Button(button.Props{
					Type: button.TypeSubmit,
				}) {
					Submit
				}
			</form>
			<div id="hello-container"></div>
		</div>
	}
}

templ HelloPost(name string) {
	<div class="mt-6">
		@alert.Alert() {
			@icon.Rocket(icon.Props{Size: 16})
			@alert.Title() {
				Note
			}
			@alert.Description() {
				{ name }
			}
		}
	</div>
}
