package components

import "go-htmx-sqlite/cmd/web/components/ui/icon"
import "go-htmx-sqlite/cmd/web/components/ui/dropdown"
import "go-htmx-sqlite/cmd/web/components/ui/avatar"
import "go-htmx-sqlite/cmd/web/components/ui/button"
import "go-htmx-sqlite/internal/types"

templ AvatarFallback(name string) {
	@avatar.Avatar(avatar.Props{
		Size: avatar.SizeMd,
	}) {
		// @avatar.Image(avatar.ImageProps{
		// 	// simulate a broken image
		// 	Src: "broken-image.jpg",
		// })
		@avatar.Fallback() {
			{ avatar.Initials(name) }
		}
	}
}

templ CSRFInput(csrfToken string) {
	<!-- Include the CSRF token -->
	<input type="hidden" name="csrf_token" value={csrfToken}/>
}

templ LogoutForm(csrfToken string){
	<form method="post" action="/logout">
			@CSRFInput(csrfToken)
			@button.Button(button.Props{
				Class:   "flex gap-2 items-center",
				Variant: button.VariantSecondary,
				Type: button.TypeSubmit,
			}) {
				@icon.LogOut()
				Logout
			}
		</form>
}

templ UserDropdown(data types.TemplateData) {
	// display login button when user is not logged in
	if !data.IsAuthenticated {
		<a href="/login">
			@button.Button(button.Props{
				Class:   "flex gap-2 items-center",
				Variant: button.VariantSecondary,
			}) {
				// Default icon size in @button is 16x16
				// Use Class: "size-6" for larger icons
				@icon.LogIn()
				Login 
			}
		</a>
	} else {
		// When user is logged in
		@dropdown.Dropdown() {
			@dropdown.Trigger() {
				if data.User != nil {
					@AvatarFallback(data.User.Name)
				} else {
					@AvatarFallback("User")
				}
			}
			@dropdown.Content(dropdown.ContentProps{
				Width: "w-56",
			}) {
				@dropdown.Label() {
					if data.User != nil {
						{ data.User.Name }
					} else {
						My Account
					}
				}
				@dropdown.Separator()

				@dropdown.Group() {
					@dropdown.Item() {
						Team
					}
					@dropdown.Item() {
						New Team
						@dropdown.Shortcut() {
							âŒ˜+T
						}
					}
				}

				@dropdown.Separator()

				@dropdown.Item() {
					@LogoutForm(data.CSRFToken)
				}
			}
		}
	}
}
