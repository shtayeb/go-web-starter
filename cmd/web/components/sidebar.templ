package components

import "go-web-starter/cmd/web/components/ui/icon"
import "go-web-starter/cmd/web/components/ui/sidebar"
import "go-web-starter/cmd/web/components/ui/collapsible"
import "go-web-starter/cmd/web/components/ui/avatar"

templ SidebarDefault() {
	@sidebar.Sidebar(sidebar.Props{
		Collapsible: sidebar.CollapsibleOffcanvas,
		Variant:     sidebar.VariantFloating,
	}) {
		@sidebar.Header(sidebar.HeaderProps{
			Class: "h-13",
		}) {
			@sidebar.Menu() {
				@sidebar.MenuItem() {
					@sidebar.MenuButton(sidebar.MenuButtonProps{
						Href: "#",
					}) {
						@icon.Blend(icon.Props{Class: "size-4"})
						<span class="font-semibold">Go Web Starter</span>
					}
				}
			}
		}
		@sidebar.Content() {
			@sidebar.Group() {
				@sidebar.GroupLabel() {
					Platform
				}
				@sidebar.Menu() {
					@sidebar.MenuItem() {
						@sidebar.MenuButton(sidebar.MenuButtonProps{
							Href: "#",
						}) {
							@icon.House(icon.Props{Class: "size-4"})
							<span>Home</span>
						}
					}
					@sidebar.MenuItem() {
						@sidebar.MenuButton(sidebar.MenuButtonProps{
							Href: "#",
						}) {
							@icon.Inbox(icon.Props{Class: "size-4"})
							<span>Inbox</span>
							@sidebar.MenuBadge() {
								3
							}
						}
					}
					@sidebar.MenuItem() {
						@collapsible.Collapsible(collapsible.Props{
							Open: true,
							Class:       "group/collapsible w-full",
						}) {
							@collapsible.Trigger() {
								@sidebar.MenuButton() {
									@icon.FileText(icon.Props{Class: "size-4"})
									<span>Documents</span>
									@icon.ChevronRight(icon.Props{
										Class: "ml-auto size-4 transition-transform group-data-[state=open]/collapsible:rotate-90",
									})
								}
							}
							@collapsible.Content() {
								@sidebar.MenuSub() {
									@sidebar.MenuSubItem() {
										@sidebar.MenuSubButton(sidebar.MenuSubButtonProps{
											Href: "#",
										}) {
											<span>Reports</span>
										}
									}
									@sidebar.MenuSubItem() {
										@sidebar.MenuSubButton(sidebar.MenuSubButtonProps{
											Href: "#",
										}) {
											<span>Invoices</span>
										}
									}
									@sidebar.MenuSubItem() {
										@sidebar.MenuSubButton(sidebar.MenuSubButtonProps{
											Href:     "#",
											IsActive: true,
										}) {
											<span>Receipts</span>
										}
									}
								}
							}
						}
					}
				}
			}
			@sidebar.Separator()
			@sidebar.Group() {
				@sidebar.Menu() {
					@sidebar.MenuItem() {
						@sidebar.MenuButton(sidebar.MenuButtonProps{
							Href: "#",
						}) {
							@icon.Users(icon.Props{Class: "size-4"})
							<span>Team</span>
						}
					}
				}
			}
		}
		@sidebar.Footer() {
			<div class="flex items-center gap-3">
				@avatar.Avatar() {
					@avatar.Image(avatar.ImageProps{
						Src: "https://avatars.githubusercontent.com/u/26936893?v=4",
					})
				}
				<div class="flex flex-col">
					<span class="text-sm font-medium">John Doe</span>
					<span class="text-xs text-gray-500">john@example.com</span>
				</div>
			</div>
		}
		// inset
	}
}

type SidebarItem struct {
	Title  string
	Href   string
	Icon   templ.Component
	Badge  string
	Active bool
}

type SidebarGroupData struct {
	Title string
	Items []SidebarItem
}

templ SidebarHeader() {
	<div class="flex px-6 border-b h-16 border-border">
		<div class="flex items-center space-x-3">
			@icon.Blend(icon.Props{Class: "size-6"})
			<div class="sidebar-text overflow-hidden">
				<h2 class="text-xl font-bold tracking-tight whitespace-nowrap">Go Web</h2>
				<p class="text-sm text-muted-foreground whitespace-nowrap">Workspace</p>
			</div>
		</div>
	</div>
}

templ SidebarContent() {
	<nav class="flex-1 p-4 space-y-2 overflow-y-auto">
		{ children... }
	</nav>
}

templ SidebarGroupItem(item SidebarItem) {
	<a
		href={ templ.URL(item.Href) }
		class={
			"flex items-center justify-between px-3 py-2 rounded-lg text-sm font-medium transition-colors group",
			templ.KV("bg-primary text-primary-foreground", item.Active),
			templ.KV("text-muted-foreground hover:text-foreground hover:bg-muted", !item.Active),
		}
		title={ item.Title }
	>
		<div class="flex items-center space-x-3">
			<div class="h-4 w-4 shrink-0">
				@item.Icon
			</div>
			<span class="sidebar-text whitespace-nowrap overflow-hidden">{ item.Title }</span>
		</div>
		if item.Badge != "" {
			<span class="sidebar-text [&>svg]:size-3 justify-center py-0.5 [a&]:hover:bg-secondary/90 w-fit whitespace-nowrap text-secondary-foreground aria-invalid:border-destructive focus-visible:ring-ring/50 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-[3px] dark:aria-invalid:ring-destructive/40 bg-secondary overflow-hidden font-medium aria-invalid:ring-destructive/20 transition-[color,box-shadow] items-center gap-1 inline-flex px-2 text-xs rounded-md border shrink-0 border-transparent">
				{ item.Badge }
			</span>
		}
	</a>
}

templ SidebarGroup(title string) {
	<div class="space-y-1">
		if title != "" {
			<h3 class="text-xs font-semibold text-muted-foreground uppercase tracking-wider px-3 py-2 sidebar-text">
				{ title }
			</h3>
		}
		{ children... }
	</div>
}

templ SidebarFooter() {
	<div class="p-4 border-t border-border">
		{ children... }
	</div>
}

// data-collapsible="offcanvas" - when it is collapsed
templ Sidebar(currentPath string) {
	{{
		mainItems := []SidebarItem{
			{Title: "Dashboard", Href: "/dashboard", Icon: icon.LayoutDashboard(icon.Props{Class: "size-4.5"}), Active: currentPath == "/dashboard"},
			{Title: "Projects", Href: "/projects", Icon: icon.Folder(icon.Props{Class: "size-4.5"}), Badge: "12", Active: currentPath == "/projects"},
		}

		toolsItems := []SidebarItem{
			{Title: "Analytics", Href: "#", Icon: icon.ChartPie(icon.Props{Class: "size-4.5"}), Active: currentPath == "/analytics"},
		}
	}}
	<div
		class="group peer block"
		data-state="expanded"
		data-collapsible="none"
		data-side="left"
		style="--sidebar-width:16rem;--sidebar-width-icon:3rem"
		id="sidebar"
	>
		<div
			data-slot="sidebar-gap"
			class="relative hidden md:flex w-(--sidebar-width) bg-transparent transition-[width] duration-200 ease-linear group-data-[collapsible=offcanvas]:w-0 group-data-[side=right]:rotate-180 group-data-[collapsible=icon]:w-(--sidebar-width-icon)"
		></div>
		<aside
			class="fixed inset-y-0 z-10 hidden h-svh w-(--sidebar-width) transition-[left,right,width] duration-200 ease-linear md:flex left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)] group-data-[collapsible=icon]:w-(--sidebar-width-icon) group-data-[side=left]:border-r group-data-[side=right]:border-l"
		>
			<div class="flex h-full w-full flex-col">
				@SidebarHeader()
				@SidebarContent() {
					@SidebarGroup("Main") {
						for _, item := range mainItems {
							@SidebarGroupItem(item)
						}
					}
					<div role="separator" aria-orientation="horizontal" class="shrink-0 w-full my-4">
						<div class="relative flex items-center w-full">
							<span class="w-full border-t h-[1px] absolute" aria-hidden="true"></span>
							<span class="relative mx-auto bg-background px-2 text-xs text-muted-foreground"></span>
						</div>
					</div>
					@SidebarGroup("Tools") {
						for _, item := range toolsItems {
							@SidebarGroupItem(item)
						}
					}
				}
				@SidebarFooter() {
					<div class="text-card-foreground w-full border bg-muted/50 shadow-xs rounded-lg sidebar-text">
						<div class="p-3">
							<p class="text-sm font-medium mb-1">Upgrade to Pro</p>
							<p class="text-xs text-muted-foreground mb-3">Unlock advanced features and analytics.</p>
							<button
								class="shadow-xs hover:bg-primary/90 gap-2 outline-none focus-visible:ring-[3px] cursor-pointer disabled:pointer-events-none whitespace-nowrap focus-visible:border-ring items-center font-medium shrink-0 h-9 disabled:opacity-50 aria-invalid:border-destructive w-full aria-invalid:ring-destructive/20 has-[>svg]:px-3 inline-flex transition-all dark:aria-invalid:ring-destructive/40 py-2 rounded-md text-sm [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 focus-visible:ring-ring/50 text-primary-foreground px-4 justify-center bg-primary"
								type="button"
							>Upgrade</button>
						</div>
					</div>
				}
			</div>
		</aside>
	</div>
}
